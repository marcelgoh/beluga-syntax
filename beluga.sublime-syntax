%YAML 1.2

#
# Author: Marcel Goh <marcel.goh@mail.mcgill.ca>
# Last Change: 31 January 2019

---
# See http://www.sublimetext.com/docs/3/syntax.html
name: Beluga
file_extensions:
  - bel
scope: source.bel
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.bel
      push: double_quoted_string

    # Comments begin with a '%' and finish at the end of the line
    - match: '%{'
      scope: punctuation.definition.comment.begin.bel
      push: block_comment
    - match: '%'
      scope: punctuation.definition.comment.bel
      push: line_comment

    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(and|case|FN|fn|mlam|of|in|let|else|module|ttrue|ffalse|schema|some|block|impossible|Bool|then|struct)\b'
      scope: keyword.other.bel

    # Declarations
    - match: '([a-zA-Z0-9_''@!-\^&+=~]*[a-zA-Z0-9_''@#!-\^&+=~]*)\s*(:)'
      captures:
        # 1: entity.name.class.bel
        1: entity.name.function.bel
        2: keyword.other.colon.bel

    # Function and data declarations
    # - match: '\s*([a-zA-Z0-9_''@!-^&+=~]*[a-zA-Z0-9_''@#!-^&+=~]*|\([|!%$+\-.,=</>]+\))\s*(:)'
    #  captures:
    #    1: entity.name.function.bel
    #    2: keyword.other.colon.bel

    - match: '\b(type|rec|\|\-)\b'
      scope: storage.type.bel

    # Meaningful punctuation
    - match: (\=\>|\|\s|\;|\=|\.)
      scope: keyword.other.bel

     # Numbers
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.bel

  double_quoted_string:
    - meta_scope: string.quoted.double.bel
    - match: '\\.'
      scope: constant.character.escape.bel
    - match: '"'
      scope: punctuation.definition.string.end.bel
      pop: true

  block_comment:
    - meta_scope: comment.block.bel
    - match: '}%'
      pop: true

  line_comment:
    - meta_scope: comment.line.bel
    - match: $
      pop: true

  # function_type_signature:
  #  - match: "(->|→)"
  #    scope: keyword.other.left-arrow.bel
  #  - match: "(<-|⃮←)"
  #    scope: keyword.other.left-arrow.bel
  #  - match: "(=>|⇒)"
  #    scope: keyword.other.big-arrow.bel
  #  - match: '\.'
  #    scope: keyword.other.period.bel
  #  - match: '(\|\-)\s*[a-zA-Z0-9_''()]*'
  #    scope: storage.type.bel
  #  - include: comments
